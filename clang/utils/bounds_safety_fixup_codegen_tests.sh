#!/bin/bash

function usage() {
  echo "$0 --bin-dir"
  echo ""
}

BIN_DIR=""

while [ -n "$1" ]; do
  case "$1" in
    --bin-dir)
      shift
      BIN_DIR="$1"
    ;;
    --help|-h)
      usage
      exit 0
    ;;
    *)
      echo "Unrecognized option \"${1}\""
      exit 1
    ;;
  esac
  shift
done

if [ ! -d "${BIN_DIR}" ]; then
  echo "BIN_DIR (${BIN_DIR}) does not exist"
  exit 1
fi

LLVM_ROOT=$( cd "${BASH_SOURCE[0]%/*}/../../" ; pwd )
echo "LLVM_ROOT:${LLVM_ROOT}"

if [ ! -d "${LLVM_ROOT}" ]; then
  echo "LLVM_ROOT (${LLVM_ROOT}) does not exist"
  exit 1
fi

TEST_ROOT="${LLVM_ROOT}/clang/test"

if [ ! -d "${TEST_ROOT}" ]; then
  echo "TEST_ROOT (${TEST_ROOT}) does not exist"
  exit 1
fi

UPDATE_SCRIPT="${LLVM_ROOT}/llvm/utils/update_cc_test_checks.py"

if [ ! -f "${UPDATE_SCRIPT}" ]; then
  echo "UPDATE_SCRIPT (${UPDATE_SCRIPT}) does not exist"
  exit 1
fi


# Add test paths here:
# E.g:
# TESTS=( \
#   BoundsSafety/CodeGen/constant-forge-ptr-expr.c \
# )
TESTS=( )

for t in "${TESTS[@]}"; do
  TEST=${TEST_ROOT}/$t
  echo "Processing ${TEST}"
  if [ ! -f "${TEST}" ]; then
    echo "Can't find ${TEST}"
    exit 1
  fi

  # Skip tests that aren't automatically generated codegen tests
  IS_CODEGEN_TEST="$(grep -Ec 'Assertions have been autogenerated by utils/update_cc_test_checks\.py' ${TEST})"
  if [ "${IS_CODEGEN_TEST}" -eq 0 ]; then
    echo "Skipping non-codgen test"
    continue
  fi

  # Note we assume BSD/macOS sed

  # Disable the Objective-C RUN lines because they cause problems with the updating script because IR conflicts
  sed -E -n -I ''  '/^\/\/ RUN:.+-fexperimental-bounds-safety-objc/s/\/\/ RUN:/\/\/ XXX_run:/;p' ${TEST}

  # Update the codegen CHECK lines
  "${UPDATE_SCRIPT}" --llvm-bin "${BIN_DIR}" ${TEST}

  # Re-enable the Objective-C RUN lines.
  sed -E -n -I ''  '/^\/\/ XXX_run:.+-fexperimental-bounds-safety-objc/s/\/\/ XXX_run:/\/\/ RUN:/;p' ${TEST}

done
